version: '3.6'

x-build-args: &build_args
  INSTALL_PYTHON_VERSION: 3.8
  INSTALL_NODE_VERSION: 12

x-default-volumes: &default_volumes
  volumes:
    - ./:/app
    - node-modules:/app/node_modules
    - ./dev.db:/tmp/db

services:
  flask-dev:
    build:
      context: .
      target: development
      args:
        <<: *build_args
    image: 'tambola-development'
    ports:
      - '5000:5000'
      - '2992:2992'
    depends_on:
      - db
    <<: *default_volumes

  flask-prod:
    build:
      context: .
      target: production
      args:
        <<: *build_args
    image: 'tambola-production'
    expose:
      - 5000
    labels:
      - 'virtual.host=tambola.sidhart.dev' # your domains separated with a space
      - 'virtual.port=5000' # exposed port of this container
      - 'virtual.tls-email=tambola@sidhart.dev' # ssl is now on
      - 'virtual.websockets' # enable websocket passthrough
    environment:
      FLASK_ENV: production
      FLASK_DEBUG: 0
      LOG_LEVEL: info
      GUNICORN_WORKERS: 4
    depends_on:
      - caddy-gen
      - db
    <<: *default_volumes

  manage:
    build:
      context: .
      target: manage
    environment:
      FLASK_ENV: production
      FLASK_DEBUG: 0
    image: 'tambola-manage'
    stdin_open: true
    tty: true
    depends_on:
      - db
    <<: *default_volumes

  db:
    image: postgres:12-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=tambola
      - POSTGRES_PASSWORD=tambola
      - POSTGRES_DB=tambola

  caddy-gen:
    container_name: caddy-gen
    image: 'wemakeservices/caddy-gen:latest'
    restart: always
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro # needs socket to read events
      - certs_acme:/etc/caddy/acme # to save acme
      - certs_ocsp:/etc/caddy/ocsp # to save certificates
    ports:
      - '80:80'
      - '443:443'

volumes:
  postgres_data:
  node-modules:
  static-build:
  dev-db:
  certs_acme:
  certs_ocsp:
