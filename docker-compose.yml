version: '3.6'

x-build-args: &build_args
  INSTALL_PYTHON_VERSION: 3.8
  INSTALL_NODE_VERSION: 12

x-default-volumes: &default_volumes
  volumes:
    - ./:/app
    - node-modules:/app/node_modules
    - ./dev.db:/tmp/db

services:
  caddy:
    image: lucaslorentz/caddy-docker-proxy:ci-alpine
    ports:
      - 80:80
      - 443:443
    environment:
      - CADDY_DOCKER_PROXY_SERVICE_TASKS=true
      - CADDY_DOCKER_PROCESS_CADDYFILE=true
    labels: # Global options
      caddy.email: tambola@sidharth.dev
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  flask-dev:
    build:
      context: .
      target: development
      args:
        <<: *build_args
    image: 'tambola-development'
    ports:
      - '5000:5000'
      - '2992:2992'
    depends_on:
      - db
    <<: *default_volumes

  flask-prod:
    build:
      context: .
      target: production
      args:
        <<: *build_args
    image: 'tambola-production'
    ports:
      - '5000:5000'
    environment:
      FLASK_ENV: production
      FLASK_DEBUG: 0
      LOG_LEVEL: info
      GUNICORN_WORKERS: 4
    labels:
      - caddy: tambola.sidharth.dev
      - caddy.reverse_proxy: '{{upstreams 5000}}'
      - caddy.tls: 'internal'
    depends_on:
      - db
      - caddy
    <<: *default_volumes

  manage:
    build:
      context: .
      target: manage
    environment:
      FLASK_ENV: production
      FLASK_DEBUG: 0
    image: 'tambola-manage'
    stdin_open: true
    tty: true
    depends_on:
      - db
    <<: *default_volumes

  db:
    image: postgres:12-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=tambola
      - POSTGRES_PASSWORD=tambola
      - POSTGRES_DB=tambola

volumes:
  postgres_data:
  node-modules:
  static-build:
  dev-db:
